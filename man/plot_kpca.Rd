% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_kpca.R
\name{plot_kpca}
\alias{plot_kpca}
\title{Kernel PCA Plot}
\usage{
plot_kpca(dat, group = NULL, covar = NULL, kernel = "rbfdot",
  kpar = list(sigma = 1e-04), top = NULL, dims = c(1L, 2L),
  label = FALSE, pal_group = "npg", pal_covar = "Blues",
  size = NULL, alpha = NULL, title = "Kernel PCA",
  legend = "right", hover = FALSE, D3 = FALSE)
}
\arguments{
\item{dat}{Omic data matrix or matrix-like object with rows corresponding to
probes and columns to samples. It is strongly recommended that data be
filtered and normalized prior to plotting. Raw counts stored in \code{
\link[edgeR]{DGEList}} or \code{\link[DESeq2]{DESeqDataSet}} objects are
automatically extracted and transformed to the log2-CPM scale, with a
warning.}

\item{group}{Optional character or factor vector of length equal to sample
size, or up to two such vectors organized into a list or data frame. Supply
legend title(s) by passing a named list or data frame.}

\item{covar}{Optional continuous covariate. If non-\code{NULL}, then plot can
render at most one \code{group} variable. Supply legend title by passing
a named list or data frame.}

\item{kernel}{The kernel generating function. Options include \code{
"rbfdot", "polydot", "tanhdot", "vanilladot", "laplacedot", "besseldot",
"anovadot",} and \code{"splinedot"}. See Details.}

\item{kpar}{A named list of arguments setting parameters for the kernel
function. If \code{NULL}, \code{kernlab} defaults are used. See Details.}

\item{top}{Optional number (if > 1) or proportion (if < 1) of most variable
probes to be used for KPCA.}

\item{dims}{Vector specifying which dimensions to plot. Must be of length
two unless \code{D3 = TRUE}.}

\item{label}{Label data points by sample name? Defaults to \code{FALSE}
unless \code{group} and \code{covar} are both \code{NULL}. If \code{TRUE},
then plot can render at most one phenotypic feature.}

\item{pal_group}{String specifying the color palette to use if \code{group}
is non-\code{NULL}, or a vector of such strings with length equal to the
number of vectors passed to \code{group}. Options include \code{"ggplot"},
all qualitative color schemes available in \code{RColorBrewer}, and the
complete collection of \code{\href{http://bit.ly/2bxnuGB}{ggsci}} palettes.
Alternatively, a character vector of colors with length equal to the
cumulative number of levels in \code{group}.}

\item{pal_covar}{String specifying the color palette to use if \code{covar}
is non-\code{NULL}, or a vector of such strings with length equal to the
number of vectors passed to \code{covar}. Options include all sequential
color schemes available in \code{RColorBrewer}. Alternatively, a
character vector of colors representing a smooth gradient, or a list of
such vectors with length equal to the number of continuous variables to
visualize.}

\item{size}{Point size.}

\item{alpha}{Point transparency.}

\item{title}{Optional plot title.}

\item{legend}{Legend position. Must be one of \code{"bottom"}, \code{"left"},
\code{"top"}, \code{"right"}, \code{"bottomright"}, \code{"bottomleft"},
\code{"topleft"}, or \code{"topright"}.}

\item{hover}{Show sample name by hovering mouse over data point? If \code{
TRUE}, the plot is rendered in HTML and will either open in your browser's
graphic display or appear in the RStudio viewer.}

\item{D3}{Render plot in three dimensions?}
}
\description{
This function plots a low-dimensional projection of an omic data matrix using
kernel principal component analysis.
}
\details{
This function maps an omic data matrix into a Hilbert space with a
user-selected kernel function. The resulting kernel matrix is then projected
into a principal component subspace, which is visualized.

Kernel PCA is a nonlinear variant of traditional PCA. Kernel methods are
designed to uncover subtle structures in complex datasets, and are the basis
of many supervised and unsupervised learning techniques, including support
vector machines and spectral clustering. For more details on kernel functions
and their input parameters, see \code{kernlab::\link[kernlab]{dots}}.

By default, \code{plot_kpca} maps the entire \code{dat} matrix into a
corresponding Hilbert space. Limit the analysis to only the most variable
probes by using the \code{top} argument.
}
\examples{
mat <- matrix(rnorm(1000 * 5), nrow = 1000, ncol = 5)
plot_kpca(mat)

library(DESeq2)
dds <- makeExampleDESeqDataSet()
dds <- rlog(dds)
plot_kpca(dds, group = colData(dds)$condition)

}
\references{
Schölkopf, B., Smola, A. & Müller, K. (1998).
\href{https://www.mitpressjournals.org/doi/abs/10.1162/089976698300017467}{
Nonlinear Component Analysis as a Kernel Eigenvalue Problem}. \emph{Neural
Computation}, \emph{10}(5), 1299-1319.
}
\seealso{
\code{\link{plot_pca}}, \code{kernlab::\link[kernlab]{dots}}
}
