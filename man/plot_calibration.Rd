% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_calibration.R
\name{plot_calibration}
\alias{plot_calibration}
\title{Probability Calibration Curve(s)}
\usage{
plot_calibration(obs, pred, pal_curves = "npg", title = NULL,
  legend = "right", hover = FALSE)
}
\arguments{
\item{obs}{Vector of observed outcomes. Must be dichotomous. Can be numeric,
logical, character, or factor. If numeric, \code{obs} must be coded \code{
1} or \code{0}. If character or factor, a warning will be issued clarifying
that the first level is assumed to be the reference.}

\item{pred}{Vector of predicted probabilities, or several such vectors
organized into a data frame or list, optionally named. Must be numeric on
\code{[0, 1]}.}

\item{pal_curves}{String specifying the color palette to use when plotting
multiple curves. Options include \code{"ggplot"}, as well as the complete
collection of \code{
\href{https://cran.r-project.org/web/packages/ggsci/vignettes/ggsci.html}{
ggsci}} palettes, which can be identified by name (e.g., \code{"npg"},
\code{"aaas"}, etc.). Alternatively, a character vector of colors with
length equal to the number of vectors in \code{pred}.}

\item{title}{Optional plot title.}

\item{legend}{Legend position. Must be one of \code{"right"}, \code{
"left"}, \code{"top"}, \code{"bottom"}, \code{"topright"}, \code{
"topleft"}, \code{"bottomright"}, or \code{"bottomleft"}.}

\item{hover}{Show predictor name by hovering mouse over ROC curve? If \code{
TRUE}, the plot is rendered in HTML and will either open in your browser's
graphic display or appear in the RStudio viewer.}
}
\description{
This functions plots probability calibration curves for one or several
classifiers.
}
\details{
Calibration curves are a quick and easy way to evaluate a classifier's fit to
the data. This function allows one or several models to be plotted in the
same figure, with points sized by the number of observations that fall within
the corresponding bin.
}
\examples{
x1 <- runif(1000)
y <- rbinom(1000, size = 1, prob = x1)
plot_calibration(obs = y, pred = x1)

x2 <- rbeta(1000, shape1 = 5/2, shape2 = 3/2)
plot_calibration(obs = y, pred = list("Good" = x1, "Bad" = x2))

}
